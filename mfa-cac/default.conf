server {
    listen 443 ssl http2; # Listen on port 443 with SSL and HTTP/2 for IPv4 connections.
    listen [::]:443 ssl http2; # Listen on port 443 with SSL and HTTP/2 for IPv6 connections.

    server_name localhost; # Define the server name. Here, it's set to localhost for local testing.

    ssl_certificate /etc/nginx/server_cert.pem; # Specify the path to the SSL certificate file.
    ssl_certificate_key /etc/nginx/server_privkey.pem; # Specify the path to the SSL certificate's private key file.
    ssl_protocols TLSv1.2 TLSv1.3; # Define the SSL protocols to use, enabling TLS v1.2 and v1.3.
    ssl_ciphers HIGH:!aNULL:!MD5; # Set the cipher suite for SSL connections, prioritizing high-security ciphers, excluding anonymous and MD5-based ciphers.
    ssl_prefer_server_ciphers on; # Prefer server's choice of ciphers over client's.

    ssl_verify_client on; # Require and verify client SSL certificate for connections.
    ssl_verify_depth 4; # Set the verification depth in the client certificates chain. Allows intermediate CAs up to 4 levels.
    ssl_client_certificate /etc/nginx/combined.pem; # Specify the path to the CA certificates file used to verify client certificates.

    add_header Strict-Transport-Security max-age=15768000; # Enable HSTS with a long max-age to enforce SSL.

    # Adjusted location / block to use NGINX as a reverse proxy for the Flask application
    location / {
        proxy_pass http://flaskapp:8000; # Forward requests to Flask app
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Subject-DN $ssl_client_s_dn;
        proxy_set_header X-Client-Verified $ssl_client_verify;
    }
}
